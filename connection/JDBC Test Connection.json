{
  "interaction_properties" : {
    "source" : [ {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to run SQL statements before and after data is accessed in the database.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Run before and after SQL statements",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "_before_after",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement or the fully qualified name of the file that contains the SQL statement to run once after all of the data is processed.",
      "displayGroup" : "before_after",
      "default_value" : "",
      "label" : "After SQL statement",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 500,
      "multiline" : false,
      "name" : "_before_after.after_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to stop the job if the After SQL statement fails.",
      "displayGroup" : "before_after",
      "default_value" : "true",
      "label" : "Stop the job when After SQL statement fails",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 700,
      "multiline" : false,
      "name" : "_before_after.after_sql.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the SQL statement from the file that is specified in the After SQL statement property.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Read After SQL statement from the file",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 600,
      "multiline" : false,
      "name" : "_before_after.after_sql.read_from_file_after_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement or the fully qualified name of the file that contains the SQL statement to run once on each node after all of the data is processed on that node.",
      "displayGroup" : "before_after",
      "default_value" : "",
      "label" : "After SQL (node) statement",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1100,
      "multiline" : false,
      "name" : "_before_after.after_sql_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to stop the job if the After SQL (node) statement fails.",
      "displayGroup" : "before_after",
      "default_value" : "true",
      "label" : "Stop the job when After SQL (node) statement fails",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1300,
      "multiline" : false,
      "name" : "_before_after.after_sql_node.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the SQL statement from the file that is specified in the After SQL (node) statement property.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Read After SQL (node) statement from file",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1200,
      "multiline" : false,
      "name" : "_before_after.after_sql_node.read_from_file_after_sql_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement or the fully qualified name of the file that contains the SQL statement to run once before any data is processed.",
      "displayGroup" : "before_after",
      "default_value" : "",
      "label" : "Before SQL statement",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "_before_after.before_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to stop the job if the Before SQL statement fails.",
      "displayGroup" : "before_after",
      "default_value" : "true",
      "label" : "Stop the job when Before SQL statement fails",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "_before_after.before_sql.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the SQL statement from the file that is specified in the Before SQL statement property.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Read Before SQL statement from file",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : false,
      "name" : "_before_after.before_sql.read_from_file_before_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement or the fully qualified name of the file that contains the SQL statement to run once on each node before any data is processed on that node.",
      "displayGroup" : "before_after",
      "default_value" : "",
      "label" : "Before SQL (node) statement",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 800,
      "multiline" : false,
      "name" : "_before_after.before_sql_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to stop the job if the Before SQL (node) statement fails.",
      "displayGroup" : "before_after",
      "default_value" : "true",
      "label" : "Stop the job when Before SQL (node) statement fails",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1000,
      "multiline" : false,
      "name" : "_before_after.before_sql_node.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the SQL statement from the file that is specified in the Before SQL (node) statement property.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Read Before SQL (node) statement from file",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 900,
      "multiline" : false,
      "name" : "_before_after.before_sql_node.read_from_file_before_sql_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to enclose the specified table name and column names on the links in quoting strings when SQL statements are generated. The connector queries the driver to determine the quoting string. If it fails to obtain this information from the driver, the connector uses the double quote character as the quoting string. Quoting strings preserve the case of object names. The default is No.",
      "displayGroup" : "general",
      "default_value" : "false",
      "label" : "Enable quoted identifiers",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : false,
      "name" : "_enable_quoted_i_ds",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to automatically generate the SQL statements at run time.",
      "displayGroup" : "general",
      "default_value" : "true",
      "label" : "Generate SQL at run time",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "_generate_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specify the maximum Java Virtual Machine heap size in megabytes.",
      "displayGroup" : "other",
      "default_value" : "256",
      "label" : "Heap size",
      "type" : "integer",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 2147483647,
      "multiline" : false,
      "name" : "_java._heap_size",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to limit the number of rows that are returned by the connector.",
      "displayGroup" : "additional",
      "default_value" : "false",
      "label" : "Limit number of returned rows",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "_limit_rows",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the maximum number of rows that will be returned by the connector.",
      "displayGroup" : "additional",
      "default_value" : "1000",
      "label" : "Limit",
      "type" : "integer",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "_limit_rows.limit",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "values" : [ {
        "label" : "Select",
        "value" : "select"
      } ],
      "description" : "Select the mode that you want to use to read from the data source._",
      "displayGroup" : "general",
      "default_value" : "select",
      "label" : "Read mode",
      "type" : "enum",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 50,
      "multiline" : false,
      "name" : "_read_mode",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "session.array_size",
      "displayGroup" : "session",
      "default_value" : "1",
      "label" : "session.array_size",
      "type" : "integer",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 50,
      "multiline" : false,
      "name" : "_session.array_size",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Custom",
        "value" : "custom"
      }, {
        "label" : "Default",
        "value" : "default"
      } ],
      "description" : "Select the character set option for the values of Char, VarChar and LongVarChar link columns for which the Extended attribute is not set to Unicode. If you select the Default option, the character set encoding of the engine host system locale is used. If you select the Custom option, you must provide the character set name to be used.",
      "displayGroup" : "session",
      "default_value" : "default",
      "label" : "Character set for non-Unicode columns",
      "type" : "enum",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 700,
      "multiline" : false,
      "name" : "_session.character_set_for_non_unicode_columns",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specify the name of the character set encoding for the values of Char, VarChar and LongVarChar link columns for which the Extended attribute is not set to Unicode.",
      "displayGroup" : "session",
      "default_value" : "",
      "label" : "Character set name",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 800,
      "multiline" : false,
      "name" : "_session.character_set_for_non_unicode_columns.character_set_name",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the default length for the Char, NChar, Binary, VarChar, NVarChar, and VarBinary link columns for which the Length attribute is not set.",
      "displayGroup" : "session",
      "default_value" : "200",
      "label" : "Default length for columns",
      "type" : "integer",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : false,
      "name" : "_session.default_length_for_columns",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the default length for the LongVarChar, LongNVarChar and LongVarBinary link columns for which the Length attribute is not set.",
      "displayGroup" : "session",
      "default_value" : "20000",
      "label" : "Default length for long columns",
      "type" : "integer",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "_session.default_length_for_long_columns",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to fail the operation when truncation is detected for the Long Columns (LongVarChar, LongNVarChar and LongVarBinary). When the the value of this property is set to No, then the connector continues execution even when data truncation is detected.",
      "displayGroup" : "session",
      "default_value" : "true",
      "label" : "Fail on truncation",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 500,
      "multiline" : false,
      "name" : "_session.fail_on_truncation",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specify the number of rows that the driver should try to fetch from the data source when the connector requests a single row. Fetching rows in addition to the row requested by the connector can improve performance because the driver can complete the subsequent requests for more rows from the connector locally without a need to access the data source._ The default is 0, which indicates that the driver optimizes the fetch operation based on its internal logic.",
      "displayGroup" : "session",
      "default_value" : "0",
      "label" : "Fetch size",
      "type" : "integer",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "_session.fetch_size",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Always generate columns as NChar, NVarChar and LongNVarChar columns instead of Char, VarChar and LongVarChar columns.",
      "displayGroup" : "session",
      "default_value" : "false",
      "label" : "Generate all columns as Unicode",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 600,
      "multiline" : false,
      "name" : "_session.generate_all_columns_as_unicode",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to keep the connection alive in the conductor process while the player processes are processing records. Select No to close the connection in the conductor process before player processes start processing records, and to connect again if necessary after the player processes have completed processing the records.",
      "displayGroup" : "session",
      "default_value" : "true",
      "label" : "Keep conductor connection alive",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 900,
      "multiline" : false,
      "name" : "_session.keep_conductor_connection_alive",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to perform early comparison of the column definitions on the link with the column definitions in the data source and to issue warning messages for any detected discrepancies which can result in data corruption. Depending on the environment and the usage scenario the early detection of discrepancies may not be possible in which case the error messages will be reported only when the actual data corruption is detected.",
      "displayGroup" : "session",
      "default_value" : "false",
      "label" : "Report schema mismatch",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "_session.report_schema_mismatch",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to run the statement on each processing node. The [[node-number]], [[node-number-base-one]] and [[node-count]] placeholders in the statement are replaced on each processing node with the actual zero-based node index, one-based node index and total number of nodes, respectively.",
      "displayGroup" : "sql",
      "default_value" : "false",
      "label" : "Enable partitioned reads",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 500,
      "multiline" : false,
      "name" : "_sql.enable_partitioned_reads",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter a SELECT statement or the fully qualified name of the file that contains the SELECT statement. The statement is used to read rows from the database.",
      "displayGroup" : "sql",
      "label" : "Select statement",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "_sql.select_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "sql.select_statement.other_clause",
      "displayGroup" : "sql",
      "label" : "sql.select_statement.other_clause",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "_sql.select_statement.other_clause",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the SELECT statement from the file that is specified in the SELECT statement property.",
      "displayGroup" : "sql",
      "default_value" : "false",
      "label" : "Read select statement from file",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "_sql.select_statement.read_from_file_select",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "sql.select_statement.where_clause",
      "displayGroup" : "sql",
      "label" : "sql.select_statement.where_clause",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : false,
      "name" : "_sql.select_statement.where_clause",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the name of the table that you want to access in the data source._",
      "displayGroup" : "general",
      "label" : "Table name",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "_table_name",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Disable",
        "value" : "disable"
      }, {
        "label" : "Enable",
        "value" : "enable"
      } ],
      "description" : "Configure the stage to run in auto-commit mode. In auto-commit mode, the transaction is committed automatically after each statement is executed. When the connector writes records to the data source, the transaction is committed after each row is written to the data source._ When the stage is configured to run multiple statements on each row, the transaction is committed after each statement is executed on the row.",
      "displayGroup" : "transaction",
      "default_value" : "disable",
      "label" : "Auto-commit mode",
      "type" : "enum",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : false,
      "name" : "_transaction.autocommit_mode",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to run SQL statements every time when a transaction begins and every time before a transaction ends.",
      "displayGroup" : "transaction",
      "default_value" : "false",
      "label" : "Run begin and end SQL statements",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 500,
      "multiline" : false,
      "name" : "_transaction.begin_end",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement to run one time before any records are processed in the transaction.",
      "displayGroup" : "transaction",
      "label" : "Begin SQL statement",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 600,
      "multiline" : false,
      "name" : "_transaction.begin_end.begin_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement to run one time in the transaction after all the records were processed in the transaction and before the transaction completes successfully.",
      "displayGroup" : "transaction",
      "label" : "End SQL statement",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 700,
      "multiline" : false,
      "name" : "_transaction.begin_end.end_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to run the End SQL statement irrespective of the number of records processed in the transaction. Select No to run the End SQL statement only if one or more records were processed in the transaction.",
      "displayGroup" : "transaction",
      "default_value" : "false",
      "label" : "Run End SQL statement if no records processed",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 800,
      "multiline" : false,
      "name" : "_transaction.begin_end.run_end_sql_if_no_records_processed",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "No",
        "value" : "no"
      }, {
        "label" : "Yes",
        "value" : "yes"
      } ],
      "description" : "Select Yes to generate an end-of-wave record after each wave of records, where the number of records in each wave is specified in the Record count property. When the Record count property is set to 0, the end-of-wave records are not generated.",
      "displayGroup" : "transaction",
      "default_value" : "no",
      "label" : "Mark end of wave",
      "type" : "enum",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "_transaction.end_of_wave",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Default",
        "value" : "default"
      }, {
        "label" : "Read committed",
        "value" : "read_committed"
      }, {
        "label" : "Read uncommitted",
        "value" : "read_uncommitted"
      }, {
        "label" : "Repeatable read",
        "value" : "repeatable_read"
      }, {
        "label" : "Serializable",
        "value" : "serializable"
      } ],
      "description" : "Specify how the connector manages statements in transactions. As soon as the connector establishes a connection and issues the first transactional statement, the connector implicitly starts a transaction that uses the specified isolation level.",
      "displayGroup" : "transaction",
      "default_value" : "default",
      "label" : "Isolation level",
      "type" : "enum",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "_transaction.isolation_level",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specify the number of rows that the stage reads from or writes to the data source in a single transaction. When this property is set to 0, the transaction is committed only once on each processing node of the stage after the stage processes all the rows on that node. When rows arrive on the input link of the stage in waves, the Record count value applies to each wave separately.",
      "displayGroup" : "transaction",
      "default_value" : "2000",
      "label" : "Record count",
      "type" : "integer",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "_transaction.record_count",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement to run once after all data is processed.",
      "displayGroup" : "before_after_sql",
      "default_value" : "",
      "label" : "After SQL",
      "type" : "string",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : true,
      "name" : "before_after.after",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Abort the job if there is an error executing a command",
      "displayGroup" : "before_after_sql",
      "default_value" : "true",
      "label" : "Fail on error After SQL",
      "type" : "boolean",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "before_after.after.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement to run once on each node after all data is processed on that node.",
      "displayGroup" : "before_after_sql",
      "default_value" : "",
      "label" : "After SQL (node)",
      "type" : "string",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 700,
      "multiline" : true,
      "name" : "before_after.after_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Abort the job if there is an error executing a command",
      "displayGroup" : "before_after_sql",
      "default_value" : "true",
      "label" : "Fail on error After SQL (node)",
      "type" : "boolean",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 800,
      "multiline" : false,
      "name" : "before_after.after_node.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement to run once before any data is processed.",
      "displayGroup" : "before_after_sql",
      "default_value" : "",
      "label" : "Before SQL",
      "type" : "string",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : true,
      "name" : "before_after.before",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Abort the job if there is an error executing a command",
      "displayGroup" : "before_after_sql",
      "default_value" : "true",
      "label" : "Fail on error Before SQL",
      "type" : "boolean",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "before_after.before.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement to run once on each node before any data is processed on that node.",
      "displayGroup" : "before_after_sql",
      "default_value" : "",
      "label" : "Before SQL (node)",
      "type" : "string",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 500,
      "multiline" : true,
      "name" : "before_after.before_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Abort the job if there is an error executing a command",
      "displayGroup" : "before_after_sql",
      "default_value" : "true",
      "label" : "Fail on error Before SQL (node)",
      "type" : "boolean",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 600,
      "multiline" : false,
      "name" : "before_after.before_node.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "The maximum number of bytes to return. Use any of following suffixes to change the unit: KB, MB, GB, or TB. A value of 0 returns all data.",
      "displayGroup" : "limitsSource",
      "label" : "Byte limit",
      "type" : "string",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 20,
      "multiline" : false,
      "name" : "byte_limit",
      "multichoice" : false,
      "placeholder" : "100MB"
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "The name of the catalog that contains the schema to read from",
      "displayGroup" : "generalSource",
      "label" : "Catalog name",
      "type" : "string",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 15,
      "multiline" : false,
      "name" : "catalog_name",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Ceiling",
        "value" : "ceiling"
      }, {
        "label" : "Down",
        "value" : "down"
      }, {
        "label" : "Floor",
        "value" : "floor"
      }, {
        "label" : "Half Down",
        "value" : "halfdown"
      }, {
        "label" : "Half Even",
        "value" : "halfeven"
      }, {
        "label" : "Half up",
        "value" : "halfup"
      }, {
        "label" : "Up",
        "value" : "up"
      } ],
      "description" : "Different rounding modes for values in columns of decimal and numeric data types",
      "displayGroup" : "generalSource",
      "default_value" : "floor",
      "label" : "Decimal Rounding Mode",
      "type" : "enum",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "decimal_rounding_mode",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Default maximum length for columns. This property can be set/is applicable only when runtime column propagation is used",
      "displayGroup" : "generalSource",
      "default_value" : "20000",
      "label" : "Default maximum length for columns",
      "type" : "integer",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 2000,
      "multiline" : false,
      "name" : "default_max_string_binary_precision",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Generate unicode type columns. This property can be set/is applicable only when runtime column propagation is used",
      "displayGroup" : "generalSource",
      "default_value" : "false",
      "label" : "Generate unicode type columns",
      "type" : "boolean",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 0,
      "multiline" : false,
      "name" : "generate_unicode_columns",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specify the maximum Java Virtual Machine heap size in megabytes.",
      "displayGroup" : "javasettings",
      "default_value" : "256",
      "label" : "Heap size",
      "type" : "integer",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "heap_size",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Filters as Spark SQL to be pushed to the data source",
      "displayGroup" : "other",
      "label" : "Push filters",
      "type" : "string",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 2147483647,
      "multiline" : false,
      "name" : "push_filters",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Inferred property that returns filters as Spark SQL that were pushed to the data source",
      "displayGroup" : "other",
      "label" : "Pushed filters",
      "type" : "string",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 2147483647,
      "multiline" : false,
      "name" : "pushed_filters",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Obtain the schema from the data source",
      "displayGroup" : "other",
      "default_value" : "true",
      "label" : "Infer schema",
      "type" : "boolean",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 2147483647,
      "multiline" : false,
      "name" : "rcp",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "General",
        "value" : "general"
      }, {
        "label" : "Select statement",
        "value" : "select"
      } ],
      "description" : "The method for reading records from the table",
      "displayGroup" : "generalSource",
      "default_value" : "general",
      "label" : "Read method",
      "type" : "enum",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 5,
      "multiline" : false,
      "name" : "read_mode",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Inferred property that returns filters as Spark SQL that could not be pushed to the data source and still need to be evaluated",
      "displayGroup" : "other",
      "label" : "Rejected filters",
      "type" : "string",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 2147483647,
      "multiline" : false,
      "name" : "rejected_filters",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "The maximum number of rows to return",
      "displayGroup" : "limitsSource",
      "label" : "Row limit",
      "type" : "integer",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 10,
      "multiline" : false,
      "name" : "row_limit",
      "multichoice" : false,
      "placeholder" : "1000"
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "The name of the schema that contains the table to read from",
      "displayGroup" : "generalSource",
      "label" : "Schema name",
      "type" : "string",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 20,
      "multiline" : false,
      "name" : "schema_name",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "The SQL SELECT statement for retrieving data from the table",
      "displayGroup" : "sqlSource",
      "label" : "Select statement",
      "type" : "string",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 50,
      "multiline" : true,
      "name" : "select_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "The name of the table to read from",
      "displayGroup" : "generalSource",
      "label" : "Table name",
      "type" : "string",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 70,
      "multiline" : false,
      "name" : "table_name",
      "multichoice" : false
    } ],
    "target" : [ {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to run SQL statements before and after data is accessed in the database.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Run before and after SQL statements",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "_before_after",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement or the fully qualified name of the file that contains the SQL statement to run once after all of the data is processed.",
      "displayGroup" : "before_after",
      "default_value" : "",
      "label" : "After SQL statement",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 500,
      "multiline" : true,
      "name" : "_before_after.after_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to stop the job if the After SQL statement fails.",
      "displayGroup" : "before_after",
      "default_value" : "true",
      "label" : "Stop the job when After SQL statement fails",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 700,
      "multiline" : false,
      "name" : "_before_after.after_sql.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the SQL statement from the file that is specified in the After SQL statement property.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Read After SQL statement from the file",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 600,
      "multiline" : false,
      "name" : "_before_after.after_sql.read_from_file_after_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement or the fully qualified name of the file that contains the SQL statement to run once on each node after all of the data is processed on that node.",
      "displayGroup" : "before_after",
      "default_value" : "",
      "label" : "After SQL (node) statement",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1100,
      "multiline" : true,
      "name" : "_before_after.after_sql_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to stop the job if the After SQL (node) statement fails.",
      "displayGroup" : "before_after",
      "default_value" : "true",
      "label" : "Stop the job when After SQL (node) statement fails",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1300,
      "multiline" : false,
      "name" : "_before_after.after_sql_node.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the SQL statement from the file that is specified in the After SQL (node) statement property.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Read After SQL (node) statement from file",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1200,
      "multiline" : false,
      "name" : "_before_after.after_sql_node.read_from_file_after_sql_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement or the fully qualified name of the file that contains the SQL statement to run once before any data is processed.",
      "displayGroup" : "before_after",
      "default_value" : "",
      "label" : "Before SQL statement",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : true,
      "name" : "_before_after.before_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to stop the job if the Before SQL statement fails.",
      "displayGroup" : "before_after",
      "default_value" : "true",
      "label" : "Stop the job when Before SQL statement fails",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "_before_after.before_sql.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the SQL statement from the file that is specified in the Before SQL statement property.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Read Before SQL statement from file",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : false,
      "name" : "_before_after.before_sql.read_from_file_before_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement or the fully qualified name of the file that contains the SQL statement to run once on each node before any data is processed on that node.",
      "displayGroup" : "before_after",
      "default_value" : "",
      "label" : "Before SQL (node) statement",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 800,
      "multiline" : true,
      "name" : "_before_after.before_sql_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to stop the job if the Before SQL (node) statement fails.",
      "displayGroup" : "before_after",
      "default_value" : "true",
      "label" : "Stop the job when Before SQL (node) statement fails",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1000,
      "multiline" : false,
      "name" : "_before_after.before_sql_node.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the SQL statement from the file that is specified in the Before SQL (node) statement property.",
      "displayGroup" : "before_after",
      "default_value" : "false",
      "label" : "Read Before SQL (node) statement from file",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 900,
      "multiline" : false,
      "name" : "_before_after.before_sql_node.read_from_file_before_sql_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to enclose the specified table name and column names on the links in quoting strings when SQL statements are generated. The connector queries the driver to determine the quoting string. If it fails to obtain this information from the driver, the connector uses the double quote character as the quoting string. Quoting strings preserve the case of object names. The default is No.",
      "displayGroup" : "general",
      "default_value" : "false",
      "label" : "Enable quoted identifiers",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "_enable_quoted_i_ds",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to automatically generate the SQL statements at run time.",
      "displayGroup" : "general",
      "default_value" : "true",
      "label" : "Generate SQL at run time",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "_generate_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specify the maximum Java Virtual Machine heap size in megabytes.",
      "displayGroup" : "other",
      "default_value" : "256",
      "label" : "Heap size",
      "type" : "integer",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 2147483647,
      "multiline" : false,
      "name" : "_java._heap_size",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "session.array_size",
      "displayGroup" : "session",
      "default_value" : "1",
      "label" : "session.array_size",
      "type" : "integer",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "_session.array_size",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the number of records to include in the batch of records for each statement execution. The value 0 means that all input records are passed to the statements in a single batch.",
      "displayGroup" : "session",
      "default_value" : "2000",
      "label" : "Batch size",
      "type" : "integer",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "_session.batch_size",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Custom",
        "value" : "custom"
      }, {
        "label" : "Default",
        "value" : "default"
      } ],
      "description" : "Select the character set option for the values of Char, VarChar and LongVarChar link columns for which the Extended attribute is not set to Unicode. If you select the Default option, the character set encoding of the engine host system locale is used. If you select the Custom option, you must provide the character set name to be used.",
      "displayGroup" : "session",
      "default_value" : "default",
      "label" : "Character set for non-Unicode columns",
      "type" : "enum",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 800,
      "multiline" : false,
      "name" : "_session.character_set_for_non_unicode_columns",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specify the name of the character set encoding for the values of Char, VarChar and LongVarChar link columns for which the Extended attribute is not set to Unicode.",
      "displayGroup" : "session",
      "default_value" : "",
      "label" : "Character set name",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 900,
      "multiline" : false,
      "name" : "_session.character_set_for_non_unicode_columns.character_set_name",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the default length for the Char, NChar, Binary, VarChar, NVarChar, and VarBinary link columns for which the Length attribute is not set.",
      "displayGroup" : "session",
      "default_value" : "200",
      "label" : "Default length for columns",
      "type" : "integer",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 500,
      "multiline" : false,
      "name" : "_session.default_length_for_columns",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the default length for the LongVarChar, LongNVarChar and LongVarBinary link columns for which the Length attribute is not set.",
      "displayGroup" : "session",
      "default_value" : "20000",
      "label" : "Default length for long columns",
      "type" : "integer",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 600,
      "multiline" : false,
      "name" : "_session.default_length_for_long_columns",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to drop any fields from the input link for which there are no matching parameters in the statements configured for the stage. Select No to issue error message when an unmatched field is present on the link.",
      "displayGroup" : "session",
      "default_value" : "false",
      "label" : "Drop unmatched fields",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : false,
      "name" : "_session.drop_unmatched_fields",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to fail the operation when truncation is detected for the Long Columns (LongVarChar, LongNVarChar and LongVarBinary). When the the value of this property is set to No, then the connector continues execution even when data truncation is detected.",
      "displayGroup" : "session",
      "default_value" : "true",
      "label" : "Fail on truncation",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 700,
      "multiline" : false,
      "name" : "_session.fail_on_truncation",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to keep the connection alive in the conductor process while the player processes are processing records. Select No to close the connection in the conductor process before player processes start processing records, and to connect again if necessary after the player processes have completed processing the records.",
      "displayGroup" : "session",
      "default_value" : "true",
      "label" : "Keep conductor connection alive",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1000,
      "multiline" : false,
      "name" : "_session.keep_conductor_connection_alive",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to perform early comparison of the column definitions on the link with the column definitions in the data source and to issue warning messages for any detected discrepancies which can result in data corruption. Depending on the environment and the usage scenario the early detection of discrepancies may not be possible in which case the error messages will be reported only when the actual data corruption is detected.",
      "displayGroup" : "session",
      "default_value" : "false",
      "label" : "Report schema mismatch",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "_session.report_schema_mismatch",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Custom statements to be run for each input row",
      "displayGroup" : "sql",
      "label" : "Custom statements",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 700,
      "multiline" : false,
      "name" : "_sql.custom_statements",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the custom statements from the file that is specified in the Custom statements property.",
      "displayGroup" : "sql",
      "default_value" : "false",
      "label" : "Read custom statements from file",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 800,
      "multiline" : false,
      "name" : "_sql.custom_statements.read_from_file_custom",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter a DELETE statement or the fully qualified name of the file that contains a DELETE statement. The statement is used to delete rows from the database.",
      "displayGroup" : "sql",
      "label" : "Delete statement",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 500,
      "multiline" : false,
      "name" : "_sql.delete_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the DELETE statement from the file that is specified in the DELETE statement property.",
      "displayGroup" : "sql",
      "default_value" : "false",
      "label" : "Read delete statement from file",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 600,
      "multiline" : false,
      "name" : "_sql.delete_statement.read_from_file_delete",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter an INSERT statement or the fully qualified name of the file that contains an INSERT statement. The statement is used to insert rows into the database.",
      "displayGroup" : "sql",
      "label" : "Insert statement",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "_sql.insert_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the INSERT statement from the file that is specified in the INSERT statement property.",
      "displayGroup" : "sql",
      "default_value" : "false",
      "label" : "Read insert statement from file",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "_sql.insert_statement.read_from_file_insert",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter an UPDATE statement or the fully qualified name of the file that contains an UPDATE statement. The statement is used to update rows in the database.",
      "displayGroup" : "sql",
      "label" : "Update statement",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : false,
      "name" : "_sql.update_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to read the UPDATE statement from the file that is specified in the UPDATE statement property.",
      "displayGroup" : "sql",
      "default_value" : "false",
      "label" : "Read update statement from file",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "_sql.update_statement.read_from_file_update",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Append",
        "value" : "append"
      }, {
        "label" : "Create",
        "value" : "create"
      }, {
        "label" : "Replace",
        "value" : "replace"
      }, {
        "label" : "Truncate",
        "value" : "truncate"
      } ],
      "description" : "Select the action to complete before writing data to the table.",
      "displayGroup" : "table_action",
      "default_value" : "append",
      "label" : "Table action",
      "type" : "enum",
      "supported_products" : [ "datastage" ],
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "_table_action",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to automatically generate the CREATE TABLE statement at run time. Depending on the input link column data types, the driver, and the data source in question, the connector may not be able to determine the corresponding native data types and produce a valid statement.",
      "displayGroup" : "table_action",
      "default_value" : "true",
      "label" : "Generate create table statement at run time",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "_table_action.generate_create_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the CREATE TABLE statement to run to create the target database table.",
      "displayGroup" : "table_action",
      "default_value" : "",
      "label" : "Create table statement",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : true,
      "name" : "_table_action.generate_create_statement.create_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to stop the job if the CREATE TABLE statement fails.",
      "displayGroup" : "table_action",
      "default_value" : "true",
      "label" : "Stop the job when create table statement fails",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "_table_action.generate_create_statement.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to automatically generate the DROP TABLE statement at run time.",
      "displayGroup" : "table_action",
      "default_value" : "true",
      "label" : "Generate drop table statement at run time",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 500,
      "multiline" : false,
      "name" : "_table_action.generate_drop_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the DROP TABLE statement to run to drop the target database table.",
      "displayGroup" : "table_action",
      "default_value" : "",
      "label" : "Drop table statement",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 600,
      "multiline" : true,
      "name" : "_table_action.generate_drop_statement.drop_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to stop the job if the DROP TABLE statement fails.",
      "displayGroup" : "table_action",
      "default_value" : "false",
      "label" : "Stop the job when drop table statement fails",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 700,
      "multiline" : false,
      "name" : "_table_action.generate_drop_statement.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to automatically generate the TRUNCATE TABLE statement at run time.",
      "displayGroup" : "table_action",
      "default_value" : "true",
      "label" : "Generate truncate table statement at run time",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 800,
      "multiline" : false,
      "name" : "_table_action.generate_truncate_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to stop the job if the TRUNCATE TABLE statement fails.",
      "displayGroup" : "table_action",
      "default_value" : "true",
      "label" : "Stop the job when truncate table statement fails",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1000,
      "multiline" : false,
      "name" : "_table_action.generate_truncate_statement.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the TRUNCATE TABLE statement to run to truncate the target database table.",
      "displayGroup" : "table_action",
      "default_value" : "",
      "label" : "Truncate table statement",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 900,
      "multiline" : true,
      "name" : "_table_action.generate_truncate_statement.truncate_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to perform the table action first. Select No to run the Before SQL statements first.",
      "displayGroup" : "table_action",
      "default_value" : "true",
      "label" : "Perform table action first",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 1100,
      "multiline" : false,
      "name" : "_table_action.table_action_first",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the name of the table that you want to access in the data source._",
      "displayGroup" : "general",
      "label" : "Table name",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : false,
      "name" : "_table_name",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Disable",
        "value" : "disable"
      }, {
        "label" : "Enable",
        "value" : "enable"
      } ],
      "description" : "Configure the stage to run in auto-commit mode. In auto-commit mode, the transaction is committed automatically after each statement is executed. When the connector writes records to the data source, the transaction is committed after each row is written to the data source._ When the stage is configured to run multiple statements on each row, the transaction is committed after each statement is executed on the row.",
      "displayGroup" : "transaction",
      "default_value" : "disable",
      "label" : "Auto-commit mode",
      "type" : "enum",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : false,
      "name" : "_transaction.autocommit_mode",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to run SQL statements every time when a transaction begins and every time before a transaction ends.",
      "displayGroup" : "transaction",
      "default_value" : "false",
      "label" : "Run begin and end SQL statements",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "_transaction.begin_end",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement to run one time before any records are processed in the transaction.",
      "displayGroup" : "transaction",
      "label" : "Begin SQL statement",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 500,
      "multiline" : false,
      "name" : "_transaction.begin_end.begin_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement to run one time in the transaction after all the records were processed in the transaction and before the transaction completes successfully.",
      "displayGroup" : "transaction",
      "label" : "End SQL statement",
      "type" : "string",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 600,
      "multiline" : false,
      "name" : "_transaction.begin_end.end_sql",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Select Yes to run the End SQL statement irrespective of the number of records processed in the transaction. Select No to run the End SQL statement only if one or more records were processed in the transaction.",
      "displayGroup" : "transaction",
      "default_value" : "false",
      "label" : "Run End SQL statement if no records processed",
      "type" : "boolean",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 700,
      "multiline" : false,
      "name" : "_transaction.begin_end.run_end_sql_if_no_records_processed",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Default",
        "value" : "default"
      }, {
        "label" : "Read committed",
        "value" : "read_committed"
      }, {
        "label" : "Read uncommitted",
        "value" : "read_uncommitted"
      }, {
        "label" : "Repeatable read",
        "value" : "repeatable_read"
      }, {
        "label" : "Serializable",
        "value" : "serializable"
      } ],
      "description" : "Specify how the connector manages statements in transactions. As soon as the connector establishes a connection and issues the first transactional statement, the connector implicitly starts a transaction that uses the specified isolation level.",
      "displayGroup" : "transaction",
      "default_value" : "default",
      "label" : "Isolation level",
      "type" : "enum",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "_transaction.isolation_level",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specify the number of rows that the stage reads from or writes to the data source in a single transaction. When this property is set to 0, the transaction is committed only once on each processing node of the stage after the stage processes all the rows on that node. When rows arrive on the input link of the stage in waves, the Record count value applies to each wave separately.",
      "displayGroup" : "transaction",
      "default_value" : "2000",
      "label" : "Record count",
      "type" : "integer",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "_transaction.record_count",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Custom",
        "value" : "custom"
      }, {
        "label" : "Delete",
        "value" : "delete"
      }, {
        "label" : "Delete then insert",
        "value" : "delete_then_insert"
      }, {
        "label" : "Insert",
        "value" : "insert"
      }, {
        "label" : "Insert new rows only",
        "value" : "insert_new_rows_only"
      }, {
        "label" : "Insert then update",
        "value" : "insert_then_update"
      }, {
        "label" : "Update",
        "value" : "update"
      }, {
        "label" : "Update then insert",
        "value" : "update_then_insert"
      } ],
      "description" : "Select the mode that you want to use to write to the data source._",
      "displayGroup" : "general",
      "default_value" : "insert",
      "label" : "Write mode",
      "type" : "enum",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "_write_mode",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Number of records to be included in each batch",
      "displayGroup" : "other",
      "default_value" : "2000",
      "label" : "Batch size",
      "type" : "integer",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 2147483647,
      "multiline" : false,
      "name" : "batch_size",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement to run once after all data is processed.",
      "displayGroup" : "before_after_sql",
      "default_value" : "",
      "label" : "After SQL",
      "type" : "string",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 300,
      "multiline" : true,
      "name" : "before_after.after",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Abort the job if there is an error executing a command",
      "displayGroup" : "before_after_sql",
      "default_value" : "true",
      "label" : "Fail on error After SQL",
      "type" : "boolean",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 400,
      "multiline" : false,
      "name" : "before_after.after.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement to run once on each node after all data is processed on that node.",
      "displayGroup" : "before_after_sql",
      "default_value" : "",
      "label" : "After SQL (node)",
      "type" : "string",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 700,
      "multiline" : true,
      "name" : "before_after.after_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Abort the job if there is an error executing a command",
      "displayGroup" : "before_after_sql",
      "default_value" : "true",
      "label" : "Fail on error After SQL (node)",
      "type" : "boolean",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 800,
      "multiline" : false,
      "name" : "before_after.after_node.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement to run once before any data is processed.",
      "displayGroup" : "before_after_sql",
      "default_value" : "",
      "label" : "Before SQL",
      "type" : "string",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : true,
      "name" : "before_after.before",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Abort the job if there is an error executing a command",
      "displayGroup" : "before_after_sql",
      "default_value" : "true",
      "label" : "Fail on error Before SQL",
      "type" : "boolean",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 200,
      "multiline" : false,
      "name" : "before_after.before.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Enter the SQL statement to run once on each node before any data is processed on that node.",
      "displayGroup" : "before_after_sql",
      "default_value" : "",
      "label" : "Before SQL (node)",
      "type" : "string",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 500,
      "multiline" : true,
      "name" : "before_after.before_node",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Abort the job if there is an error executing a command",
      "displayGroup" : "before_after_sql",
      "default_value" : "true",
      "label" : "Fail on error Before SQL (node)",
      "type" : "boolean",
      "supported_products" : [ "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 600,
      "multiline" : false,
      "name" : "before_after.before_node.fail_on_error",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "The name of the catalog that contains the schema to write to",
      "displayGroup" : "generalTarget",
      "label" : "Catalog name",
      "type" : "string",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 15,
      "multiline" : false,
      "name" : "catalog_name",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "The Create DDL statement for recreating the target table",
      "displayGroup" : "sqlTarget",
      "label" : "Create statement",
      "type" : "string",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 5,
      "multiline" : true,
      "name" : "create_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : true,
      "masked" : false,
      "description" : "Set to true if stage has an output reject link",
      "displayGroup" : "general",
      "default_value" : "false",
      "label" : "Has reject output",
      "type" : "boolean",
      "supported_products" : [ "datastage", "datastage_scapi" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 75,
      "multiline" : false,
      "name" : "has_reject_output",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "Specify the maximum Java Virtual Machine heap size in megabytes.",
      "displayGroup" : "javasettings",
      "default_value" : "256",
      "label" : "Heap size",
      "type" : "integer",
      "supported_products" : [ "datastage" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 100,
      "multiline" : false,
      "name" : "heap_size",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "A comma separated list of column names to override the primary key used during an update or merge",
      "displayGroup" : "generalTarget",
      "label" : "Key column names",
      "type" : "string",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 60,
      "multiline" : false,
      "name" : "key_column_names",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "The name of the schema that contains the table to write to",
      "displayGroup" : "generalTarget",
      "label" : "Schema name",
      "type" : "string",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 20,
      "multiline" : false,
      "name" : "schema_name",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "The SQL used for setup operations, for example a CREATE statement",
      "displayGroup" : "sqlTarget",
      "label" : "Static statement",
      "type" : "string",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : true,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 20,
      "multiline" : true,
      "name" : "static_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Append",
        "value" : "append"
      }, {
        "label" : "Replace",
        "value" : "replace"
      }, {
        "label" : "Truncate",
        "value" : "truncate"
      } ],
      "description" : "The action to take on the target table to handle the new data set",
      "displayGroup" : "generalTarget",
      "default_value" : "append",
      "label" : "Table action",
      "type" : "enum",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 50,
      "multiline" : false,
      "name" : "table_action",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "The name of the table to write to",
      "displayGroup" : "generalTarget",
      "label" : "Table name",
      "type" : "string",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 40,
      "multiline" : false,
      "name" : "table_name",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "The SQL used to truncate table",
      "displayGroup" : "sqlTarget",
      "label" : "Truncate statement",
      "type" : "string",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 15,
      "multiline" : true,
      "name" : "truncate_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "description" : "The SQL INSERT, UPDATE, MERGE, or DELETE statement for updating data in the table.",
      "displayGroup" : "sqlTarget",
      "label" : "Update statement",
      "type" : "string",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 10,
      "multiline" : true,
      "name" : "update_statement",
      "multichoice" : false
    }, {
      "user_defined_for_external" : false,
      "hidden" : false,
      "masked" : false,
      "values" : [ {
        "label" : "Insert",
        "value" : "insert"
      }, {
        "label" : "Merge",
        "value" : "merge"
      }, {
        "label" : "Static statement",
        "value" : "static_statement",
        "supported_products" : [ "catalog", "cpd", "dv", "igc", "mde", "mdi", "ml", "studio" ]
      }, {
        "label" : "Update",
        "value" : "update"
      }, {
        "label" : "Update statement",
        "value" : "update_statement",
        "supported_products" : [ "catalog", "cpd", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ]
      }, {
        "label" : "Update statement with table action",
        "value" : "update_statement_table_action",
        "supported_products" : [ "catalog", "cpd", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ]
      } ],
      "description" : "The mode for writing records to the target table",
      "displayGroup" : "generalTarget",
      "default_value" : "insert",
      "label" : "Write mode",
      "type" : "enum",
      "supported_products" : [ "catalog", "cpd", "datarefinery", "datastage_scapi", "dv", "igc", "mde", "mdi", "ml", "studio" ],
      "required" : false,
      "descriptionHasLink" : false,
      "user_defined" : false,
      "readonly" : false,
      "uiOnly" : false,
      "displayOrdinal" : 10,
      "multiline" : false,
      "name" : "write_mode",
      "multichoice" : false
    } ]
  },
  "datasource_type" : "e59b1c36-6f30-4879-9f74-7e81dde4cca6",
  "name" : "JDBC Test Connection",
  "rov" : {
    "mode" : 0,
    "member_roles" : {
      "1000331001" : {
        "roles" : [ "OWNER" ],
        "user_iam_id" : "1000331001"
      }
    }
  },
  "properties" : {
    "trust_all_ssl_cert" : "false",
    "password" : "{dsmenc}LRdqVaogvjkTFSjT03ToTA==",
    "gateway_url" : "https://internal-nginx-svc.ds.svc:12443",
    "jar_uris" : "",
    "jdbc_driver" : "com.ibm.db2.jcc.DB2Driver",
    "catalog_support" : "false",
    "ssl" : "false",
    "jdbc_url" : "{dsmenc}0CvJmNNsv0BPGO/bPjqKRaMpjsDyXA1J/kBqxcJmfO0DwXdy7xAEEwhiYjytrg3MJnBA9UAaKSs3J1lSK/eyxQ==",
    "username" : "{dsmenc}pTAWhOSChkccG6MOeS9ovA=="
  },
  "origin_country" : "us"
}